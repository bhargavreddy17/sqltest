name: Check for SQL Commands in PR

on:
  pull_request:
    paths:
      - '**/*.sql'
    types: [opened, synchronize, reopened]

jobs:
  check-sql-commands:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Fetch all branches
        run: git fetch --all

      - name: Get SQL file changes in PR
        run: |
          echo "Comparing branches: ${GITHUB_BASE_REF}...${GITHUB_HEAD_REF}"
          # Get the diff for .sql files and filter added/modified lines
          git diff origin/${{ github.base_ref }}...origin/${{ github.head_ref }} -- '*.sql' \
            | grep -E '^\+|^\-' | grep -vE '^\+\+\+|^\-\-\-' > sql_changes.txt
          cat sql_changes.txt

      - name: Check for SQL commands in changes
        id: check_sql
        run: |
          commands_found=false
          message=""

          while IFS= read -r line; do
            # Check if added/modified lines contain SQL commands
            if echo "$line" | grep -q -E 'ADD|UPDATE|DELETE|DROP'; then
              echo "Detected SQL command in PR: $line"
              commands_found=true
              message+="Detected SQL command in PR: $line\n"
            fi
          done < sql_changes.txt

          echo "commands_found=$commands_found" >> $GITHUB_ENV
          echo "alert_message=$message" >> $GITHUB_ENV

      - name: Exit early if no SQL commands found
        if: ${{ env.commands_found == 'false' }}
        run: |
          echo "No SQL commands detected in PR. Exiting."
          exit 0

      - name: Create GitHub Issue
        if: ${{ env.commands_found == 'true' }}
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/${{ github.repository }}/issues
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          title: "SQL Commands Detected in PR"
          body: |
            **SQL Commands Found in PR**
            - PR Title: ${{ github.event.pull_request.title }}
            - PR URL: ${{ github.event.pull_request.html_url }}
            - PR Number: #${{ github.event.pull_request.number }}
            - **Detected Commands**:
              ${{ env.alert_message }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
